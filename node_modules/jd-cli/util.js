var fs = require('fs')
var path = require('path')

function transform(str) {
  var re = /-(\w)/g
  return str.replace(re, function ($0, $1) {
    return $1.toUpperCase()
  })
}

function transform_(str) {
  return str.replace('-', '_')
}

exports.mkfile = function (dirpath, options) {
  var pathtmp
  //这里指用/或\都可以分隔目录,如linux的/usr/local/services和windows的d:\temp\aaaa
  var paths = dirpath.split(/[/\\]/)
  for (var i = 0; i < paths.length; i++) {
    var dirname = paths[i]
    if (pathtmp) pathtmp = path.join(pathtmp, dirname)
    else pathtmp = dirname

    if (!fs.existsSync(pathtmp)) fs.mkdirSync(pathtmp)
  }
  // 创建文件
  options.maps.forEach(item => {
    var file = path.join(pathtmp, item.file)
    if (!fs.existsSync(file)) fs.createWriteStream(file)
    fs.writeFile(file, item.tpl, 'utf-8', (err) => {
      // if (err) console.log(process.argv)
      if (err) console.log(err)
    })
  })
  if (options.callback && typeof options.callback === 'function') options.callback()
}

exports.jadeTemplate = function (dirpath) {
  var paths = dirpath.split(/[/\\]/)
  var name = paths[paths.length - 1]
  var template = ['.wgt-', name, '\n\nscript.\n\t', 'require.async(\'widget/', dirpath, '\');'].join('')
  return { file: `${name}.jade`, tpl: template }
}

exports.pageTemplate = function (dirpath) {
  var paths = dirpath.split(/[/\\]/)
  var name = paths[paths.length - 1]
  var template = ['extends /page/layout/framework\n\nblock title\n\ttitle ', name, '\n\nblock content\n\t', 'include /widget/header/header\n\t', 'include /widget/', dirpath, '/', name].join('')
  return { file: `${transform_(name)}.jade`, tpl: template }
}

exports.jsTemplate = function (dirpath) {
  var paths = dirpath.split(/[/\\]/)
  var name = transform(paths[paths.length - 1])
  var template = ['// var $ = require(\'widget/js/lib/zepto\');\n\nvar ', name, ' = {\n\tinit: function() {\n\t\tconsole.log(\'', name, '\')\n\t}\n}\n\n', name, '.init();'].join('')
  return { file: `${paths[paths.length - 1]}.js`, tpl: template }
}

exports.scssTemplate = function (dirpath) {
  var paths = dirpath.split(/[/\\]/)
  var name = paths[paths.length - 1]
  var template = ['// @import \'/widget/css/mixin.scss\';\n\n.wgt-', name, ' {\n\t\n}'].join('')
  return { file: `${name}.scss`, tpl: template }
}